tengo un problema con la delegacion con el ambiente pues el this no lo encuentras


FUNCIONES

(define (env-lookup x env)   ---> BUSCAR EN EL AMBIENTE
(multi-extend-env ids exprs env)---> CREA UN NUEVO  AMBIENTE
(def amb (multi-extend-env '() '() empty-env))

(define (extend-frame-env! id val env)---> AGREGA UN NUEVO PAR 





;; Member
(deftype Member
  (field nombre valor)                        ;valor sera una box para d eesa forma manejar la mutabilidad de estos
  (method nombre lista-valores cuerpo  ))

;; values
(deftype Val
  (numV n)
  (boolV b)
  (objectV exp fields metodos amb))

(deftype Def
  (my-def id expr))

(deftype Expr
  (num n)
  (bool b)
  (id s)
  (binop f l r)
  (unop f s)
  (my-if c tb fb)
  (seqn expr1 expr2)
  (lcal defs body)
  ;DESDE AQUÍ EMPIEZA LO DE OBJETOS
  (object exp list-fields list-methods)            ;  creamos el objeto
  (this yo)              
  (set id val)                ;  cambiar el valor de una varibale
  (get id)                    ;  acceder al valor de una de sus variables
  (send objeto metodo lista-valores)  ;  permite invocar a un método de un objeto dado, con 0 o más argumentos. (send o set-x (+ 1 3))
  (shallow-copy expr)
  (deep-copy expresion)
  )

(objectV exp fields metodos amb)


;obtener-nombre:: Expr -> sym 
;funcion que obtiene el nombre del id , en el fondo esto le va a dar el nombre del objeto que se busca
;por lo talto se le puede pasar un id o un this para referirse a un objeto
(define (obtener-nombre loqsea )
  (match loqsea
    [(id d) d]
    [(this yos) yos ]
    ))