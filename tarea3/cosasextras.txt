FUNCIONES

(define (env-lookup x env)   ---> BUSCAR EN EL AMBIENTE
(multi-extend-env ids exprs env)---> CREA UN NUEVO  AMBIENTE
(def amb (multi-extend-env '() '() empty-env))

(define (extend-frame-env! id val env)---> AGREGA UN NUEVO PAR 











---OBJETOS SIMPLES-------------------------------------
    
 (parse '(object
          (field y 2)))

 (parse '(object
          (field x 1)
          (field y 2)))

 (parse '(object
          (method rest (e) (- e 1))
          ))

 (parse '(object
          (method sum (z) (+ z 2))
          (method rest (e) (- e 1) )
          ))



(parse '(local
              [(define o (object
                          (field x 1)
                          (field y 2)
                          (method estacosa () this )))]
           (send o estacosa )))




----------------------------------------------------------------------------------------

(lcal
 (list (my-def 'smart-computer (object 'NO
                                       '()
                                       (list (method 'secret? '(something) (num 42)))))
       (my-def 'everything (object 'NO
                                   '()
                                   '()))
       (my-def 'oracle (object (id 'smart-computer)
                               '()
                               '())))
 (send 'oracle 'secret? (list (id 'everything))))



-----------------------------------------------------------------------------

(aEnv 
 (hash 'o1 (objectV 'NO
                    (list
                     (field 'z (box (numV 4)))
                     (field 'w (box (numV 5))))
                 #0=(list
                     (method 'amb '() (binop #<procedure:+> (num 100) (num 1))))
                 #1=(aEnv (hash 'yo (box (objectV 'NO
                                                  (list (field 'z (box (numV 4)))
                                                  (field 'w (box (numV 5))))
                                                  #0##1#)))
                          #2=(mtEnv)))
       'o2 (objectV 'NO
                    (list
                     (field 'x (box (numV 1)))
                     (field 'y (box (numV 2))))
                    #3=(list (method 'amb '() (id 'aaa)))
                    #4=(aEnv